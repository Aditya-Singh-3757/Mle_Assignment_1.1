Script started on 2022-06-23 09:47:29+05:30 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="120" LINES="30"]
]0;root@TIGER03346: ~root@TIGER03346:~# f[Kgti[K[Kit status
fatal: not a git repository (or any of the parent directories): .git
]0;root@TIGER03346: ~root@TIGER03346:~# cd n[KNew\ folder/
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mticgit/[m

nothing added to commit but untracked files present (use "git add" to track)
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git add -A
warning: adding embedded git repository: ticgit
[33mhint: You've added another git repository inside your current repository.[m
[33mhint: Clones of the outer repository will not contain the contents of[m
[33mhint: the embedded repository and will not know how to obtain it.[m
[33mhint: If you meant to add a submodule, use:[m
[33mhint: [m
[33mhint: 	git submodule add <url> ticgit[m
[33mhint: [m
[33mhint: If you added this path by mistake, you can remove it from the[m
[33mhint: index with:[m
[33mhint: [m
[33mhint: 	git rm --cached ticgit[m
[33mhint: [m
[33mhint: See "git help submodule" for more information.[m
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git rm --cached ticgit
error: the following file has staged content different from both the
file and the HEAD:
    ticgit
(use -f to force removal)
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# -f
-f: command not found
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git rm [K[K[K[K[K[K[Kf[Kgit status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   ticgit[m

]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git comi[Kmint[K[Kt -m "adding clone file"
[master 489d4b5] adding clone file
 1 file changed, 1 insertion(+)
 create mode 160000 ticgit
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git status
On branch master
nothing to commit, working tree clean
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git branch testing
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git log --oneline --decorate
[?1h=[33m489d4b5[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;32mtesting[m[33m)[m adding clone file[m
[33mfef7983[m use of amend command to redo the comit:- my first commit after adding readme and ignore file[m
[K[?1l>]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git checkout testing
Switched to branch 'testing'
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git checkout testinglog --oneline --decorate
[?1h=[33m489d4b5[m[33m ([m[1;36mHEAD -> [m[1;32mtesting[m[33m, [m[1;32mmaster[m[33m)[m adding clone file[m
[33mfef7983[m use of amend command to redo the comit:- my first commit after adding readme and ignore file[m
[K[?1l>]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# vim test.rb
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;30r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[30;1H"test.rb" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[94m~                                                                                                                       [3;1H~                                                                                                                       [4;1H~                                                                                                                       [5;1H~                                                                                                                       [6;1H~                                                                                                                       [7;1H~                                                                                                                       [8;1H~                                                                                                                       [9;1H~                                                                                                                       [10;1H~                                                                                                                       [11;1H~                                                                                                                       [12;1H~                                                                                                                       [13;1H~                                                                                                                       [14;1H~                                                                                                                       [15;1H~                                                                                                                       [16;1H~                                                                                                                       [17;1H~                                                                                                                       [18;1H~                                                                                                                       [19;1H~                                                                                                                       [20;1H~                                                                                                                       [21;1H~                                                                                                                       [22;1H~                                                                                                                       [23;1H~                                                                                                                       [24;1H~                                                                                                                       [25;1H~                                                                                                                       [26;1H~                                                                                                                       [27;1H~                                                                                                                       [28;1H~                                                                                                                       [29;1H~                                                                                                                       [m[30;103H0,0-1[9CAll[1;1H[?25h[?25l[30;93H^[[1;1H[30;95H[[1;1H[30;96H>[1;1H[30;97H0[1;1H[30;98H;[1;1H[30;99H1[1;1H[30;100H0[1;1H[30;101H;[1;1H[30;93H         [1;1H[?25h[?25l[30;93H^M[1;1H[30;93H  [1;1H[?25h[?25l[30;93Hq[1;1H[?25h[?25l[30;94H~@k[1;1H[30;93H    [1;1H[?25h[?25l[30;93H^O[1;1H[30;93H  [1;1H[?25h[?25l[30;93H^Z[1;1H[30;1H
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t
[1]+  Stopped                 vim test.rb
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git comiit[K[K[Kmit -a -m "made a change"
On branch testing
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31m.test.rb.swp[m

nothing added to commit but untracked files present (use "git add" to track)
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git checkout master
Switched to branch 'master'
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git log --oneline --decorate --graph --all
[?1h=* [33m489d4b5[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;32mtesting[m[33m)[m adding clone file[m
* [33mfef7983[m use of amend command to redo the comit:- my first commit after adding readme and ignore file[m
[K[?1l>]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31m.test.rb.swp[m

nothing added to commit but untracked files present (use "git add" to track)
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git commit -[K[K[K[K[K[K[K[K[K[K[K[Kgit checkout testiun=[K[K[Kng
Switched to branch 'testing'
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git status
On branch testing
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31m.test.rb.swp[m

nothing added to commit but untracked files present (use "git add" to track)
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git v[Kcommit -a[Km "chnage in testing:[K"
On branch testing
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31m.test.rb.swp[m

nothing added to commit but untracked files present (use "git add" to track)
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git add -A
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git status
On branch testing
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   .test.rb.swp[m

]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git commit =[K-m "mo[K[Ktest file in testing"
[testing e4f0cb6] test file in testing
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 .test.rb.swp
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git status
On branch testing
nothing to commit, working tree clean
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git statuscommit -m "test file in testing"status[Kadd -Acommit -m "chnage in testing"status[Kcheckout testing[10Pstatuslog --oneline --decorate --graph --all
[?1h=* [33me4f0cb6[m[33m ([m[1;36mHEAD -> [m[1;32mtesting[m[33m)[m test file in testing[m
* [33m489d4b5[m[33m ([m[1;32mmaster[m[33m)[m adding clone file[m
* [33mfef7983[m use of amend command to redo the comit:- my first commit after adding readme and ignore file[m
[K[?1l>]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git checkout master
Switched to branch 'master'
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git merge testing
Updating 489d4b5..e4f0cb6
Fast-forward
 .test.rb.swp | Bin [31m0[m -> [32m12288[m bytes
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 .test.rb.swp
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git merge testingcheckout masterlog --oneline --decorate --graph --all
[?1h=* [33me4f0cb6[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;32mtesting[m[33m)[m test file in testing[m
* [33m489d4b5[m adding clone file[m
* [33mfef7983[m use of amend command to redo the comit:- my first commit after adding readme and ignore file[m
[K[?1l>]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git branch -d testing
Deleted branch testing (was e4f0cb6).
]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git branch -d testinglog --oneline --decorate --graph --all
[?1h=* [33me4f0cb6[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m test file in testing[m
* [33m489d4b5[m adding clone file[m
* [33mfef7983[m use of amend command to redo the comit:- my first commit after adding readme and ignore file[m
[K[?1l>]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# [K]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git branch
[?1h=* [32mmaster[m[m
[K[?1l>]0;root@TIGER03346: ~/New folderroot@TIGER03346:~/New folder# git branch -v
[?1h=* [32mmaster[m e4f0cb6 test file in testing